{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handlechange","type","onChange","App","handleChange","e","setState","searchfield","target","value","state","fetch","then","response","json","catch","error","console","log","users","this","filteredMonstered","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAEaA,EAAO,SAAAC,GAAK,OACzB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCHLC,G,MAAW,SAAAR,GACxB,OAAO,qBAAKC,UAAU,YAAf,SAEPD,EAAMS,SAASC,KAAK,SAAAP,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,WCJNO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACzB,uBAAOC,KAAK,SAASb,UAAU,SAASW,YAAaA,EAAaG,SAAUF,MCmC7DG,G,wDAlCf,aAAc,IAAD,8BACb,gBAeAC,aAAe,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAdxD,EAAKC,MAAQ,CACbd,SAAS,GACTW,YAAY,IAJC,E,qDAQb,WAAqB,IAAD,OACpBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAC3BJ,MAAK,SAAAO,GAAK,OAAG,EAAKb,SAAS,CAAEV,SAASuB,OACtCJ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,oBAM5B,WAAS,IAAD,EAC2BI,KAAKV,MAAhCd,EADA,EACAA,SAAWW,EADX,EACWA,YACbc,EAAoBzB,EAAS0B,QAAO,SAAAhC,GAAO,OACjDA,EAAQG,KAAK8B,cAAcC,SAASjB,EAAYgB,kBAEhD,OACA,sBAAKnC,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAcoB,KAAKhB,eAC5D,cAAC,EAAD,CAAUR,SAAUyB,W,GA7BFI,cCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a3a6eced.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card = props => (\r\n<div className='card-container' >\r\n<img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />    \r\n<h2>{props.monster.name}</h2>\r\n<p>{props.monster.email}</p>\r\n</div>\r\n);","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.style.css';\r\nexport const CardList = props => {\r\nreturn <div className='card-list'>\r\n{\r\nprops.monsters.map( monster => (\r\n<Card key={monster.id} monster={ monster }/>    \r\n)) \r\n}\r\n</div>;\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handlechange}) => (\r\n<input type='search' className='search' placeholder={placeholder} onChange={handlechange}/>  \r\n);","import React, {Component} from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\nclass App extends Component {\nconstructor(){\nsuper();\nthis.state = {\nmonsters:[],\nsearchfield:'' \n};\n}  \n\ncomponentDidMount() {\nfetch('https://jsonplaceholder.typicode.com/users')\n.then(response => response.json())\n.catch(error => console.log(error))\n.then(users =>this.setState({ monsters:users }))\n.catch(error => console.log(error))\n}  \n\nhandleChange = e => this.setState({searchfield:e.target.value})\n\n\nrender(){\nconst { monsters , searchfield } = this.state; \nconst filteredMonstered = monsters.filter(monster => \nmonster.name.toLowerCase().includes(searchfield.toLowerCase())\n);\nreturn(\n<div className=\"App\"> \n<h1>Monsters Roladex</h1>\n<SearchBox placeholder='Search Monsters' handlechange={this.handleChange} />\n<CardList monsters={filteredMonstered} /> \n</div>\n)\n}  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}